 rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Projects collection - Public read, Admin write
    match /projects/{document} {
      // Allow anyone to read published projects
      allow read: if resource.data.status in ['published', 'completed'];
      
      // Allow authenticated users (admin) to write
      allow write: if request.auth != null && request.auth.token.email_verified == true;
      
      // Allow admin to read all projects (including drafts)
      allow read: if request.auth != null && request.auth.token.email_verified == true;
    }
    
    // Contacts collection - Admin read/write, Public create
    match /contacts/{document} {
      // Allow anyone to create contact messages
      allow create: if request.auth == null 
        && request.resource.data.keys().hasAll(['name', 'email', 'subject', 'message', 'createdAt'])
        && request.resource.data.name is string
        && request.resource.data.email is string
        && request.resource.data.subject is string
        && request.resource.data.message is string
        && request.resource.data.name.size() > 0
        && request.resource.data.email.size() > 0
        && request.resource.data.subject.size() > 0
        && request.resource.data.message.size() > 0
        && request.resource.data.name.size() <= 100
        && request.resource.data.subject.size() <= 200
        && request.resource.data.message.size() <= 5000;
      
      // Allow admin to read and update contacts
      allow read, update: if request.auth != null && request.auth.token.email_verified == true;
      
      // Allow admin to delete contacts
      allow delete: if request.auth != null && request.auth.token.email_verified == true;
    }
    
    // Analytics collection - Admin read/write, Public create (for tracking)
    match /analytics/{document} {
      // Allow anyone to create analytics events (page views, etc.)
      allow create: if request.resource.data.keys().hasAll(['type', 'timestamp'])
        && request.resource.data.type is string
        && request.resource.data.type in ['page_view', 'project_view', 'contact_submission'];
      
      // Allow admin to read analytics
      allow read: if request.auth != null && request.auth.token.email_verified == true;
      
      // Prevent updates and deletes of analytics (data integrity)
      allow update, delete: if false;
    }
    
    // Admin users collection (if you want to store admin user data)
    match /admin_users/{userId} {
      allow read, write: if request.auth != null 
        && request.auth.uid == userId 
        && request.auth.token.email_verified == true;
    }
    
    // Configuration collection - Admin only
    match /config/{document} {
      allow read, write: if request.auth != null && request.auth.token.email_verified == true;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}